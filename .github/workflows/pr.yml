name: Django CI

on: [pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.12-slim
    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}

    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          apt-get update
          apt-get install -y make libpq-dev gcc git

      - name: Install Poetry
        run: python3 -m pip install --upgrade pip && python3 -m pip install poetry==1.8.3

      - name: Configure Poetry to skip project installation
        run: poetry config installer.no-binary ":all:"

      - name: Install dependencies with Poetry
        run: poetry install --no-root  # This prevents Poetry from installing the non-existent backend package
      
      - name: Check for Git Repository
        run: |
          if [ -d ".git" ]; then
            poetry run pre-commit uninstall
            poetry run pre-commit install
          else
            echo "Skipping pre-commit installation because this is not a git repository."
          fi

      - name: Install
        run: make install

      - name: Lint
        run: make lint
